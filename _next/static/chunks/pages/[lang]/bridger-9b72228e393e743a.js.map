{"version":3,"file":"static/chunks/pages/[lang]/bridger-9b72228e393e743a.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,kBACA,WACE,OAAO,EAAQ,U,yhBCEvB,IAAMC,EAAa,CACjBC,GAAIC,EAAAA,GACJC,GAAIC,EAAAA,GACJC,EAAGC,EAAAA,GACHC,OAAQA,EAAAA,GACRC,KAAM,SAAQ,G,IAALC,EAAQ,EAARA,SAAmB,EAATC,UACjB,OAAM,SAAEJ,EAAAA,GAAI,CAACK,MAAO,W,SAAaF,KAEnCG,KAAM,SAAQ,G,IAALH,EAAQ,EAARA,SAAUC,EAAS,EAATA,UACjB,OAAM,SACHG,EAAAA,EAAiB,CAChBC,MAAOC,EAAAA,GACPC,YAAa,CACXC,gBAAiB,OACjBC,aAAc,EACdC,SAAU,GACVC,aAAc,MACdC,UAAW,MACXC,UAAW,OACXC,wBAAyB,SAE3BC,SAAmB,OAATd,QAAAA,IAAAA,OAAAA,EAAAA,EAAWe,QAAQ,aAAc,I,SAE1ChB,KAIPiB,EAAG,SAAQ,G,IAALjB,EAAQ,EAARA,SAAUkB,EAAI,EAAJA,KACd,OAAM,SACHC,EAAAA,GAAI,CAACjB,MAAM,YAAYgB,KAAMA,E,mBAC3BrB,EAAAA,GAAI,CAACuB,GAAG,I,SAAKpB,OAIpBqB,GAAI,SAAQ,G,IAALrB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,Q,SAC3BV,KAIPuB,GAAI,SAAQ,G,IAALvB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,U,SAC3BV,KAIPwB,GAAI,SAAQ,G,IAALxB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,M,SAC3BV,KAIPyB,GAAI,SAAQ,G,IAALzB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,M,SAC3BV,MAeT,IAViB,SAAQ,G,IAAL0B,EAAO,EAAPA,QAClB,MAA8B,IAA1BA,EAAQC,gBAA4B,yBAClC,qB,mBAEDC,EAAAA,GAAG,C,mBACDC,EAAAA,EAAS,KAAKH,EAAO,CAAEnC,WAAYA,W,qHC/B5C,UAjCgB,SAAQ,G,IAALmC,EAAO,EAAPA,QAASI,EAAI,EAAJA,KAC1B,OAAM,SACHC,EAAAA,EAAS,CAACD,KAAMA,E,mBACdE,EAAAA,EAAQ,CAACN,QAASA,S","sources":["webpack://_N_E/?19d2","webpack://_N_E/./components/markdown.tsx","webpack://_N_E/./pages/[lang]/bridger.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[lang]/bridger\",\n      function () {\n        return require(\"private-next-pages/[lang]/bridger.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[lang]/bridger\"])\n      });\n    }\n  ","import { MDXRemote } from \"next-mdx-remote\";\nimport { Text, Link, ListItem, UnorderedList, Box, Center } from \"@chakra-ui/react\";\nimport Head from \"next/head\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { agate } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n// import { shadesOfPurple } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nconst components = {\n  ul: UnorderedList,\n  li: ListItem,\n  p: Text,\n  Center: Center,\n  gray: ({ children, className }: any) => {\n    return <Text color={\"GrayText\"}>{children}</Text>;\n  },\n  code: ({ children, className }: any) => {\n    return (\n      <SyntaxHighlighter\n        style={agate}\n        customStyle={{\n          backgroundColor: \"none\",\n          borderRadius: 4,\n          fontSize: 13,\n          marginBottom: \"1em\",\n          marginTop: \"1em\",\n          overflowX: \"auto\",\n          WebkitOverflowScrolling: \"touch\",\n        }}\n        language={className?.replace(/language-/g, \"\")}\n      >\n        {children}\n      </SyntaxHighlighter>\n    );\n  },\n  a: ({ children, href }: any) => {\n    return (\n      <Link color=\"green.300\" href={href}>\n        <Text as=\"u\">{children}</Text>\n      </Link>\n    );\n  },\n  h4: ({ children }: any) => {\n    return (\n      <Text variant={\"h4\"} fontSize=\"large\">\n        {children}\n      </Text>\n    );\n  },\n  h3: ({ children }: any) => {\n    return (\n      <Text variant={\"h3\"} fontSize=\"x-large\">\n        {children}\n      </Text>\n    );\n  },\n  h2: ({ children }: any) => {\n    return (\n      <Text variant={\"h2\"} fontSize=\"2xl\">\n        {children}\n      </Text>\n    );\n  },\n  h1: ({ children }: any) => {\n    return (\n      <Text variant={\"h1\"} fontSize=\"3xl\">\n        {children}\n      </Text>\n    );\n  },\n};\nconst Markdown = ({ content }: any) => {\n  if (content.compiledSource == \"\") return <></>;\n  return (\n    <>\n      <Box>\n        <MDXRemote {...content} components={components} />\n      </Box>\n    </>\n  );\n};\nexport default Markdown;\n","import { serialize } from \"next-mdx-remote/serialize\";\nimport Markdown from \"^components/markdown\";\nimport Container from \"^components/container\";\nimport { highlightAll } from \"prismjs\";\nimport { useEffect } from \"react\";\nimport fetch from \"isomorphic-fetch\";\nimport remarkHtml from \"remark-html\";\nimport { transform } from \"^api/index\";\nimport { getAllLanguageSlugs, getLanguage } from \"^api/lang\";\n// import remarkprism from \"remark-prism\";\nconst Bridger = ({ content, lang }: any) => {\n  return (\n    <Container lang={lang}>\n      <Markdown content={content} />\n    </Container>\n  );\n};\n\nexport async function getStaticPaths() {\n  const paths = getAllLanguageSlugs();\n  return {\n    paths,\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ params }: any) {\n  const language = getLanguage(params.lang);\n  return {\n    props: {\n      lang: language,\n      content: await transform(\n        (\n          await fetch(\"https://raw.githubusercontent.com/Tricked-dev/bridgebot/main/README.md?token=ARH4DU7U5LEXMDZMCR457JDBUOJN2\").then((r: any) => r.text())\n        )\n          .replace(/images/gim, \"https://raw.githubusercontent.com/Tricked-dev/bridgebot/main/images\")\n          .replace(\"./LICENSE\", \"https://github.com/Tricked-dev/bridgebot/blob/main/LICENSE\")\n          .replace(/language-/gim, \"\")\n      ),\n    },\n  };\n}\n\nexport default Bridger;\n"],"names":["window","__NEXT_P","push","components","ul","UnorderedList","li","ListItem","p","Text","Center","gray","children","className","color","code","SyntaxHighlighter","style","agate","customStyle","backgroundColor","borderRadius","fontSize","marginBottom","marginTop","overflowX","WebkitOverflowScrolling","language","replace","a","href","Link","as","h4","variant","h3","h2","h1","content","compiledSource","Box","MDXRemote","lang","Container","Markdown"],"sourceRoot":""}