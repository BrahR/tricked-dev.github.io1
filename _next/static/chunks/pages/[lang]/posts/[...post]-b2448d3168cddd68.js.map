{"version":3,"file":"static/chunks/pages/[lang]/posts/[...post]-b2448d3168cddd68.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,0BACA,WACE,OAAO,EAAQ,U,yhBCEvB,IAAMC,EAAa,CACjBC,GAAIC,EAAAA,GACJC,GAAIC,EAAAA,GACJC,EAAGC,EAAAA,GACHC,OAAQA,EAAAA,GACRC,KAAM,SAAQ,G,IAALC,EAAQ,EAARA,SAAmB,EAATC,UACjB,OAAM,SAAEJ,EAAAA,GAAI,CAACK,MAAO,W,SAAaF,KAEnCG,KAAM,SAAQ,G,IAALH,EAAQ,EAARA,SAAUC,EAAS,EAATA,UACjB,OAAM,SACHG,EAAAA,EAAiB,CAChBC,MAAOC,EAAAA,GACPC,YAAa,CACXC,gBAAiB,OACjBC,aAAc,EACdC,SAAU,GACVC,aAAc,MACdC,UAAW,MACXC,UAAW,OACXC,wBAAyB,SAE3BC,SAAmB,OAATd,QAAAA,IAAAA,OAAAA,EAAAA,EAAWe,QAAQ,aAAc,I,SAE1ChB,KAIPiB,EAAG,SAAQ,G,IAALjB,EAAQ,EAARA,SAAUkB,EAAI,EAAJA,KACd,OAAM,SACHC,EAAAA,GAAI,CAACjB,MAAM,YAAYgB,KAAMA,E,mBAC3BrB,EAAAA,GAAI,CAACuB,GAAG,I,SAAKpB,OAIpBqB,GAAI,SAAQ,G,IAALrB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,Q,SAC3BV,KAIPuB,GAAI,SAAQ,G,IAALvB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,U,SAC3BV,KAIPwB,GAAI,SAAQ,G,IAALxB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,M,SAC3BV,KAIPyB,GAAI,SAAQ,G,IAALzB,EAAQ,EAARA,SACL,OAAM,SACHH,EAAAA,GAAI,CAACyB,QAAS,KAAMZ,SAAS,M,SAC3BV,MAeT,IAViB,SAAQ,G,IAAL0B,EAAO,EAAPA,QAClB,MAA8B,IAA1BA,EAAQC,gBAA4B,yBAClC,qB,mBAEDC,EAAAA,GAAG,C,mBACDC,EAAAA,EAAS,KAAKH,EAAO,CAAEnC,WAAYA,W,4JCpE7B,SAASuC,EAAK,G,IAAEC,EAAF,EAAEA,MAAOL,EAAT,EAASA,QAASM,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,KACrE,OAAM,SACHC,EAAAA,EAAS,CAACJ,MAAQ,GAAQ,OAANA,EAAM,kBAAiBC,YAAaA,EAAaE,KAAMA,E,mBACzEN,EAAAA,GAAG,CAACN,QAAS,YAAac,OAAO,K,mBAC/BC,OAAI,C,oBACFC,UAAO,C,qBACLV,EAAAA,GAAG,CAACW,OAAO,OAAOC,eAAe,SAASC,YAAY,OAAOC,WAAW,OAAOC,KAAK,QAAQ1C,UAAU,Q,UACpGgC,IAAS,UAAKpC,EAAAA,GAAI,CAACK,MAAM,W,UAAW,aAAW+B,M,SAC/CW,EAAAA,EAAQ,CAAClB,QAASA,Q,SAEpBmB,KAAE,gB","sources":["webpack://_N_E/?d589","webpack://_N_E/./components/markdown.tsx","webpack://_N_E/./pages/[lang]/posts/[...post].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[lang]/posts/[...post]\",\n      function () {\n        return require(\"private-next-pages/[lang]/posts/[...post].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[lang]/posts/[...post]\"])\n      });\n    }\n  ","import { MDXRemote } from \"next-mdx-remote\";\nimport { Text, Link, ListItem, UnorderedList, Box, Center } from \"@chakra-ui/react\";\nimport Head from \"next/head\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { agate } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n// import { shadesOfPurple } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nconst components = {\n  ul: UnorderedList,\n  li: ListItem,\n  p: Text,\n  Center: Center,\n  gray: ({ children, className }: any) => {\n    return <Text color={\"GrayText\"}>{children}</Text>;\n  },\n  code: ({ children, className }: any) => {\n    return (\n      <SyntaxHighlighter\n        style={agate}\n        customStyle={{\n          backgroundColor: \"none\",\n          borderRadius: 4,\n          fontSize: 13,\n          marginBottom: \"1em\",\n          marginTop: \"1em\",\n          overflowX: \"auto\",\n          WebkitOverflowScrolling: \"touch\",\n        }}\n        language={className?.replace(/language-/g, \"\")}\n      >\n        {children}\n      </SyntaxHighlighter>\n    );\n  },\n  a: ({ children, href }: any) => {\n    return (\n      <Link color=\"green.300\" href={href}>\n        <Text as=\"u\">{children}</Text>\n      </Link>\n    );\n  },\n  h4: ({ children }: any) => {\n    return (\n      <Text variant={\"h4\"} fontSize=\"large\">\n        {children}\n      </Text>\n    );\n  },\n  h3: ({ children }: any) => {\n    return (\n      <Text variant={\"h3\"} fontSize=\"x-large\">\n        {children}\n      </Text>\n    );\n  },\n  h2: ({ children }: any) => {\n    return (\n      <Text variant={\"h2\"} fontSize=\"2xl\">\n        {children}\n      </Text>\n    );\n  },\n  h1: ({ children }: any) => {\n    return (\n      <Text variant={\"h1\"} fontSize=\"3xl\">\n        {children}\n      </Text>\n    );\n  },\n};\nconst Markdown = ({ content }: any) => {\n  if (content.compiledSource == \"\") return <></>;\n  return (\n    <>\n      <Box>\n        <MDXRemote {...content} components={components} />\n      </Box>\n    </>\n  );\n};\nexport default Markdown;\n","import { getPostBySlug, getAllPosts } from \"^api/index\";\nimport Container from \"^components/container\";\nimport { Box, Text } from \"@chakra-ui/react\";\nimport Markdown from \"^components/markdown\";\nimport Head from \"next/head\";\nimport { getAllLanguageSlugs, getLanguage } from \"^api/lang\";\nexport default function Post({ title, content, description, published, lang }: any) {\n  return (\n    <Container title={`${title} | Tricked.pro`} description={description} lang={lang}>\n      <Box variant={\"elevation\"} shadow=\"md\">\n        <main>\n          <article>\n            <Box margin=\"auto\" justifyContent=\"center\" marginRight=\"auto\" marginLeft=\"auto\" maxW=\"60rem\" className=\"posts\">\n              {published && <Text color=\"GrayText\">Published {published}</Text>}\n              <Markdown content={content} />\n            </Box>\n            <br />\n          </article>\n        </main>\n      </Box>\n    </Container>\n  );\n}\n\nexport async function getStaticProps(context: any) {\n  const language = getLanguage(context.params.lang);\n  return {\n    props: { ...(await getPostBySlug(context.params.lang, context.params.post.join(\"/\"))), lang: language },\n  };\n}\n\nexport async function getStaticPaths() {\n  let paths: any = [...(await getAllPosts(\"nl\")), ...(await getAllPosts(\"en\"))];\n  const langs = getAllLanguageSlugs();\n  paths = paths.map((post: any) => ({\n    params: { post: post.slug.split(\"/\") },\n  }));\n\n  let newPaths = [];\n  for (let path of paths) {\n    for (let lang of langs) {\n      newPaths.push({ params: { ...path.params, ...lang.params } });\n    }\n  }\n\n  return {\n    paths: newPaths,\n    fallback: false,\n  };\n}\n"],"names":["window","__NEXT_P","push","components","ul","UnorderedList","li","ListItem","p","Text","Center","gray","children","className","color","code","SyntaxHighlighter","style","agate","customStyle","backgroundColor","borderRadius","fontSize","marginBottom","marginTop","overflowX","WebkitOverflowScrolling","language","replace","a","href","Link","as","h4","variant","h3","h2","h1","content","compiledSource","Box","MDXRemote","Post","title","description","published","lang","Container","shadow","main","article","margin","justifyContent","marginRight","marginLeft","maxW","Markdown","br"],"sourceRoot":""}