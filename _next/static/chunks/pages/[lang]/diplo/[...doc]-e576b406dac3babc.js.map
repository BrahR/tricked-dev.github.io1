{"version":3,"file":"static/chunks/pages/[lang]/diplo/[...doc]-e576b406dac3babc.js","mappings":"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","sources":["webpack://_N_E/?baf5","webpack://_N_E/./components/markdown.tsx","webpack://_N_E/./pages/[lang]/diplo/[...doc].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[lang]/diplo/[...doc]\",\n      function () {\n        return require(\"private-next-pages/[lang]/diplo/[...doc].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[lang]/diplo/[...doc]\"])\n      });\n    }\n  ","import { MDXRemote } from \"next-mdx-remote\";\nimport { Text, Link, ListItem, UnorderedList, Box, Center } from \"@chakra-ui/react\";\nimport Head from \"next/head\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { agate } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n// import { shadesOfPurple } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nconst components = {\n  ul: UnorderedList,\n  li: ListItem,\n  p: Text,\n  Center: Center,\n  gray: ({ children, className }: any) => {\n    return <Text color={\"GrayText\"}>{children}</Text>;\n  },\n  code: ({ children, className }: any) => {\n    return (\n      <SyntaxHighlighter\n        style={agate}\n        customStyle={{\n          backgroundColor: \"none\",\n          borderRadius: 4,\n          fontSize: 13,\n          marginBottom: \"1em\",\n          marginTop: \"1em\",\n          overflowX: \"auto\",\n          WebkitOverflowScrolling: \"touch\",\n        }}\n        language={className?.replace(/language-/g, \"\")}\n      >\n        {children}\n      </SyntaxHighlighter>\n    );\n  },\n  a: ({ children, href }: any) => {\n    return (\n      <Link color=\"green.300\" href={href}>\n        <Text as=\"u\">{children}</Text>\n      </Link>\n    );\n  },\n  h4: ({ children }: any) => {\n    return (\n      <Text variant={\"h4\"} fontSize=\"large\">\n        {children}\n      </Text>\n    );\n  },\n  h3: ({ children }: any) => {\n    return (\n      <Text variant={\"h3\"} fontSize=\"x-large\">\n        {children}\n      </Text>\n    );\n  },\n  h2: ({ children }: any) => {\n    return (\n      <Text variant={\"h2\"} fontSize=\"2xl\">\n        {children}\n      </Text>\n    );\n  },\n  h1: ({ children }: any) => {\n    return (\n      <Text variant={\"h1\"} fontSize=\"3xl\">\n        {children}\n      </Text>\n    );\n  },\n};\nconst Markdown = ({ content }: any) => {\n  if (content.compiledSource == \"\") return <></>;\n  return (\n    <>\n      <Box>\n        <MDXRemote {...content} components={components} />\n      </Box>\n    </>\n  );\n};\nexport default Markdown;\n","import { getAllDocs, getDocBySlug } from \"^api/index\";\nimport Container from \"^components/container\";\nimport Markdown from \"^components/markdown\";\nimport React, { ReactNode } from \"react\";\nimport NextLink from \"next/link\";\nimport { IconButton, Avatar, Box, CloseButton, Flex, HStack, VStack, Icon, useColorModeValue, Link, Drawer, DrawerContent, Text, useDisclosure, BoxProps, FlexProps, Menu, MenuButton, MenuDivider, MenuItem, MenuList } from \"@chakra-ui/react\";\nimport { FiHome, FiTrendingUp, FiCompass, FiStar, FiSettings, FiMenu, FiBell, FiChevronDown } from \"react-icons/fi\";\nimport type { ReactText } from \"react\";\nimport { getAllLanguageSlugs, getLanguage } from \"^api/lang\";\n\nexport function SidebarWithHeader({ lang = \"en\", children, LinkItems }: { lang: string; children: ReactNode; LinkItems: any }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <Box minH=\"100vh\">\n      <SidebarContent lang={lang} LinkItems={LinkItems} onClose={() => onClose} display={{ base: \"none\", md: \"block\" }} />\n      <Drawer autoFocus={false} isOpen={isOpen} placement=\"left\" onClose={onClose} returnFocusOnClose={false} onOverlayClick={onClose} size=\"full\">\n        <DrawerContent>\n          <SidebarContent lang={lang} LinkItems={LinkItems} onClose={onClose} />\n        </DrawerContent>\n      </Drawer>\n      {/* mobilenav */}\n      <MobileNav onOpen={onOpen} />\n      <Box ml={{ base: 0, md: 60 }} p=\"4\">\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\ninterface SidebarProps extends BoxProps {\n  onClose: () => void;\n  lang: string;\n  LinkItems: {\n    url: string;\n    title: string;\n    slug: string;\n  }[];\n}\n\nconst SidebarContent = ({ onClose, LinkItems, lang = \"en\", ...rest }: SidebarProps) => {\n  return (\n    <Box bg={useColorModeValue(\"white\", \"gray.700\")} borderRight=\"1px\" borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")} w={{ base: \"full\", md: 60 }} pos=\"fixed\" h=\"full\" {...rest}>\n      <Flex h=\"20\" alignItems=\"center\" mx=\"8\" justifyContent=\"space-between\">\n        <CloseButton display={{ base: \"flex\", md: \"none\" }} onClick={onClose} />\n      </Flex>\n      {LinkItems.map((link, y) => (\n        <NavItem key={y} href={`/${lang}/diplo/${link.slug}`}>\n          {link.title || link.slug}\n        </NavItem>\n      ))}\n    </Box>\n  );\n};\n\ninterface NavItemProps extends FlexProps {\n  children: ReactText;\n  href: string;\n}\nconst NavItem = ({ children, href, ...rest }: NavItemProps) => {\n  return (\n    <Link as={NextLink} passHref href={href} style={{ textDecoration: \"none\" }}>\n      <Flex\n        align=\"center\"\n        p=\"4\"\n        mx=\"4\"\n        borderRadius=\"lg\"\n        role=\"group\"\n        cursor=\"pointer\"\n        _hover={{\n          bg: \"cyan.400\",\n          color: \"white\",\n        }}\n        {...rest}\n      >\n        {children}\n      </Flex>\n    </Link>\n  );\n};\n\ninterface MobileProps extends FlexProps {\n  onOpen: () => void;\n}\nconst MobileNav = ({ onOpen, ...rest }: MobileProps) => {\n  return (\n    <Flex ml={{ base: 0, md: 60 }} px={{ base: 4, md: 4 }} alignItems=\"center\" borderBottomWidth=\"1px\" borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")} justifyContent={{ base: \"space-between\", md: \"flex-end\" }} {...rest}>\n      <IconButton display={{ base: \"flex\", md: \"none\" }} onClick={onOpen} variant=\"outline\" aria-label=\"open menu\" icon={<FiMenu />} />\n    </Flex>\n  );\n};\n\nexport default function Post({ title, content, description, docs, lang }: any) {\n  //   const [isLargerThan1280] = useMediaQuery(\"(min-width: 1280px)\");\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Container title={`${title} | Diplo`} description={description} DontforceWidth={true} lang={lang}>\n      <Box minH=\"100vh\">\n        <SidebarContent lang={lang} LinkItems={docs.filter((x: any) => !x.slug.endsWith(\".md\") && !x.slug.endsWith(\".mdx\"))} onClose={() => onClose} display={{ base: \"none\", md: \"block\" }} />\n        <Drawer autoFocus={false} isOpen={isOpen} placement=\"left\" onClose={onClose} returnFocusOnClose={false} onOverlayClick={onClose} size=\"full\">\n          <DrawerContent>\n            <SidebarContent lang={lang} LinkItems={docs} onClose={onClose} />\n          </DrawerContent>\n        </Drawer>\n        {/* mobilenav */}\n        <MobileNav onOpen={onOpen} />\n        <Box ml={{ base: 0, md: 60 }} p=\"4\">\n          <Box>\n            <main>\n              <article>\n                <Box>\n                  <Markdown content={content} />\n                </Box>\n                <br />\n              </article>\n            </main>\n          </Box>\n        </Box>\n      </Box>\n      );\n      {/* <Box backgroundColor=\"gray.700\" width=\"10rem\" position={\"sticky\"}> */}\n      {/* <Box as=\"ul\" padding=\"3px\" fontSize=\"1.2rem\">\n          {(docs as any[])\n            .filter((x) => x.slug && !x.slug.endsWith(\"md\"))\n            .map((x, y) => (\n              <li key={y}>\n                <Link borderBottomColor=\"red\" borderBottomWidth=\"3px\" href={x.slug}>\n                  {x.title || x.slug}\n                </Link>\n              </li>\n            ))}\n        </Box> */}\n      {/* </Box> */}\n      {/* <Spacer /> */}\n    </Container>\n  );\n}\n\nexport async function getStaticProps(context: any) {\n  const language = getLanguage(context.params.lang);\n\n  return {\n    props: {\n      ...(await getDocBySlug(context.params.doc.join(\"/\"))),\n      docs: (await getAllDocs()).filter((x: any) => !x.slug.endsWith(\".md\") && !x.slug.endsWith(\".mdx\")),\n      lang: language,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  let paths: any = await getAllDocs();\n  const langs = getAllLanguageSlugs();\n  paths = paths.map((doc: any) => ({\n    params: { doc: doc.slug.split(\"/\") },\n  }));\n  let newPaths = [];\n  for (let path of paths) {\n    for (let lang of langs) {\n      newPaths.push({ params: { ...path.params, ...lang.params } });\n    }\n  }\n\n  return {\n    paths: newPaths,\n    fallback: false,\n  };\n}\n"],"names":["window","__NEXT_P","push","components","ul","UnorderedList","li","ListItem","p","Text","Center","gray","children","className","color","code","SyntaxHighlighter","style","agate","customStyle","backgroundColor","borderRadius","fontSize","marginBottom","marginTop","overflowX","WebkitOverflowScrolling","language","replace","a","href","Link","as","h4","variant","h3","h2","h1","content","compiledSource","Box","MDXRemote","SidebarWithHeader","lang","LinkItems","useDisclosure","isOpen","onOpen","onClose","minH","SidebarContent","display","base","md","Drawer","autoFocus","placement","returnFocusOnClose","onOverlayClick","size","DrawerContent","MobileNav","ml","rest","bg","useColorModeValue","borderRight","borderRightColor","w","pos","h","Flex","alignItems","mx","justifyContent","CloseButton","onClick","map","link","y","NavItem","slug","title","NextLink","passHref","textDecoration","align","role","cursor","_hover","px","borderBottomWidth","borderBottomColor","IconButton","aria-label","icon","FiMenu","Post","description","docs","Container","DontforceWidth","filter","x","endsWith","main","article","Markdown","br"],"sourceRoot":""}